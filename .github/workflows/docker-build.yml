name: Docker Build and Push

on:
  push:
    branches: [ main, feature/* ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  # 支持手动触发
  workflow_dispatch:
    inputs:
      build_type:
        description: '构建类型'
        required: true
        default: 'development'
        type: choice
        options:
        - development
        - staging  
        - production
      push_to_registry:
        description: '推送到镜像仓库'
        required: false
        default: true
        type: boolean

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Generate safe branch name
      id: branch
      run: |
        SAFE_BRANCH=$(echo "${{ github.ref_name }}" | sed 's/[^a-zA-Z0-9._-]/-/g')
        echo "safe_name=${SAFE_BRANCH}" >> $GITHUB_OUTPUT
        echo "Safe branch name: ${SAFE_BRANCH}"

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        flavor: |
          latest=auto
        tags: |
          type=raw,value=${{ steps.branch.outputs.safe_name }}-{{sha}}
          type=raw,value=latest,enable={{is_default_branch}}
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}

    - name: Display build information
      run: |
        echo "🏗️ 构建信息:"
        echo "  仓库: ${{ github.repository }}"
        echo "  分支: ${{ github.ref_name }}"
        echo "  提交: ${{ github.sha }}"
        echo "  构建类型: ${{ github.event.inputs.build_type || 'auto' }}"
        echo "  推送镜像: ${{ github.event.inputs.push_to_registry || 'true' }}"
        echo "  镜像标签: ${{ steps.meta.outputs.tags }}"

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' && (github.event.inputs.push_to_registry != 'false') }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          BUILD_TIME=${{ github.event.head_commit.timestamp }}
          COMMIT_HASH=${{ github.sha }}
          VERSION=${{ steps.meta.outputs.version }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        outputs: ${{ github.event_name != 'pull_request' && (github.event.inputs.push_to_registry != 'false') && 'type=registry' || 'type=cacheonly' }}

  test-makefile:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Test Makefile commands
      run: |
        make env-info
        make docker-info
        make version